# Copyright 2016-2019 Peter Dimov
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)

language: cpp

sudo: false

dist: trusty

branches:
  only:
    - master
env:
  matrix:
    - BOGUS_JOB=true

matrix:

  exclude:
    - env: BOGUS_JOB=true

    - os: linux
      compiler: g++-8
      env: TOOLSET=gcc COMPILER=g++-8 CXXSTD=03,11,14,17,2a
      addons:
        apt:
          packages:
            - g++-8
          sources:
            - ubuntu-toolchain-r-test

    - os: linux
      compiler: g++-9
      env: TOOLSET=gcc COMPILER=g++-9 CXXSTD=03,11,14,17,2a
      addons:
        apt:
          packages:
            - g++-9
          sources:
            - ubuntu-toolchain-r-test


    - os: linux
      compiler: clang++-8
      env: TOOLSET=clang COMPILER=clang++-8 CXXSTD=03,11,14,17,2a
      addons:
        apt:
          packages:
            - clang-8
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-8

    - os: linux
      compiler: vxworks-clang 
      env: TOOLSET=clang COMPILER=vxworks-clang CXXSTD=17
      before_install: 
        - wget https://labs.windriver.com/downloads/wrsdk-vxworks7-qemu-1.3.tar.bz2
        - tar xf wrsdk-vxworks7-qemu-1.3.tar.bz2
      before_script:
        - source wrsdk-vxworks7-qemu/toolkit/wind_sdk_env.linux
        - rm project-config.jam
        - echo "import option  ;" >> ./project-config.jam
        - echo "import feature ;" >> ./project-config.jam
        - echo "import os ;     " >> ./project-config.jam
        - echo "using clang-vxworks : : $CXX : <cflags>$CFLAGS <cxxflags>$CXXFLAGS <compileflags>$CPPFLAGS <linkflags>$LDFLAGS <archiver>$AR  
                    <linker-type>vxworks 
                    <archiver>$(ar) 
                    <dll-path>$(dll-path)
                    <linker>$(linker) ; import feature ;" >> ./project-config.jam
        - echo "import feature ;" >> ./project-config.jam
        - echo "using $TOOLSET : : $COMPILER ;" >> ./project-config.jam
        - echo "using $TOOLSET : : $COMPILER ;" >> ./project-config.jam
        - echo "using $TOOLSET : : $COMPILER ;" >> ./project-config.jam
        - echo "using $TOOLSET : : $COMPILER ;" >> ./project-config.jam
        - echo "using $TOOLSET : : $COMPILER ;" >> ./project-config.jam
        - echo "using $TOOLSET : : $COMPILER ;" >> ./project-config.jam
        - echo "using $TOOLSET : : $COMPILER ;" >> ./project-config.jam
      addons:
        apt:          
          packages:
            - qemu-system-x86
    




install:
  - BOOST_BRANCH=develop && [ "$TRAVIS_BRANCH" == "master" ] && BOOST_BRANCH=master || true
  - cd ..
  - git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
  - cd boost-root
  - git submodule update --init tools/boostdep
  - cp -r $TRAVIS_BUILD_DIR/* libs/system
  - python tools/boostdep/depinst/depinst.py system
  - ./bootstrap.sh
  - ./b2 headers

script:
  - echo "using $TOOLSET : : $COMPILER ;" > ~/user-config.jam
  - ./b2 -j3 libs/system/test toolset=$TOOLSET cxxstd=$CXXSTD variant=debug,release ${UBSAN:+cxxflags=-fsanitize=undefined cxxflags=-fno-sanitize-recover=undefined linkflags=-fsanitize=undefined define=UBSAN=1 debug-symbols=on} ${LINKFLAGS:+linkflags=$LINKFLAGS}

notifications:
  email:
    on_success: always
