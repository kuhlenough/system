# Copyright 2016-2019 Peter Dimov
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://boost.org/LICENSE_1_0.txt)

language: cpp

sudo: false

os: linux
compiler: clang 
addons:
    apt:
        packages: 
            - qemu-system-x86 nfs-kernel-server
            - g++-multilib libncurses5:i386 libc6:i386 libgcc1:i386 gcc-4.8-base:i386 
            - libstdc++5:i386 libstdc++6:i386 libxtst6 libgtk2.0-0:i386 libxtst6:i386

cache:
    directories:
     - /home/travis/build/sdk


env: TOOLSET=clang-vxworks CXXSTD=17  

before_install: 
        - pushd /home/travis/build/sdk
        - if [ ! -d "wrsdk-vxworks7-qemu" ] ; then wget https://labs.windriver.com/downloads/wrsdk-vxworks7-qemu-1.3.tar.bz2 ; tar xf wrsdk-vxworks7-qemu-1.3.tar.bz2 ; fi
        - popd

before_script:
        - pushd /home/travis/build/sdk
        # source the enviorment for the VxWorks SDK
        - source wrsdk-vxworks7-qemu/toolkit/wind_sdk_env.linux
        - export SDK_KERNEL=$PWD/wrsdk-vxworks7-qemu/bsps/itl_generic_2_0_0_2/boot/vxWorks
        - popd 
        # set up parameters for QEMU
        - export QEMU_GATEWAY="90.1.0.2"
        - export QEMU_DHCP="90.1.0.4"
        - export QEMU_GUEST="90.1.0.40"
        - export SDK_BOOTLINE="bootline:gei(0,0)host:vxWorks g=$QEMU_GATEWAY e=$QEMU_GUEST:fffff000"
        - export SDK_NETDEV="user,net=$QEMU_GATEWAY/24,dhcpstart=$QEMU_DHCP,id=net0,hostfwd=tcp:127.0.0.1:1534-:1534"
        - export SDK_DEV="e1000,netdev=net0"
        # set up VxWorks for mounting Boost build directory over NFS 
        - export MY_UID=`id -u`
        - export MY_GID=`id -g`
        - export MY_HOST="travis-job"
        - sudo exportfs *:$PWD
        - export PKG_SRC_BUILD_DIR=$PWD
        - export LAYER_SRC_PATH=$PKG_SRC_BUILD_DIR
        # copy extra files into test diretory
        - cp $TRAVIS_BUILD_DIR/project-config.jam ./project-config.jam
        - cp $TRAVIS_BUILD_DIR/clang-vxworks.jam  ./tools/build/src/tools/clang-vxworks.jam
        # make a FIFO for to comunicate with VxWorks running in QEMU
        - mkfifo /tmp/guest.in /tmp/guest.out
        # Boot VxWorks in QEMU
        - |
           qemu-system-x86_64 -m 512M -serial pipe:/tmp/guest -kernel $SDK_KERNEL -display none -monitor none \
                              -device $SDK_DEV -netdev $SDK_NETDEV -append "$SDK_BOOTLINE" &
           export QEMU_PID=$!
        - timeout 20 cat /tmp/guest.out || true
        # set up VxWorks as NFS client 
        - function vx_cmd() { echo $2 >/tmp/guest.in; timeout $1 cat /tmp/guest.out || true; }
        - vx_cmd 2 "i"
        - vx_cmd 1 "hostAdd \"$MY_HOST\", \"$QEMU_GATEWAY\" "
        - vx_cmd 1 "nfsAuthUnixSet \"$MY_HOST\", $MY_UID, $MY_GID, 0"
        - vx_cmd 2 "nfsMountAll \"$MY_HOST\", 0, 0"
        - vx_cmd 1 "cmd"



install:
  - BOOST_BRANCH=develop && [ "$TRAVIS_BRANCH" == "master" ] && BOOST_BRANCH=master || true
  - cd ..
  - git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
  - cd boost-root
  - git submodule update --init tools/boostdep
  - cp -r $TRAVIS_BUILD_DIR/* libs/system
  - python tools/boostdep/depinst/depinst.py system
  - ./bootstrap.sh
  - ./b2 headers

script:
  - ./b2 -j3 libs/system/test toolset=$TOOLSET variant=debug,release 

#notifications:
#  email:
#    on_success: always
